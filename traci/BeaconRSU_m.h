//
// Generated file, do not edit! Created by nedtool 5.5 from veins/modules/application/traci/BeaconRSU.msg.
//

#ifndef __VEINS_BEACONRSU_M_H
#define __VEINS_BEACONRSU_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// dll export symbol
#ifndef VEINS_API
#  if defined(VEINS_EXPORT)
#    define VEINS_API  OPP_DLLEXPORT
#  elif defined(VEINS_IMPORT)
#    define VEINS_API  OPP_DLLIMPORT
#  else
#    define VEINS_API
#  endif
#endif

// cplusplus {{
#import "veins/base/utils/Coord.h"
#import "veins/modules/utility/Consts80211p.h"
#include "veins/modules/messages/BaseFrame1609_4_m.h"
#include "veins/base/utils/SimpleAddress.h"
// }}


namespace veins {

/**
 * Class generated from <tt>veins/modules/application/traci/BeaconRSU.msg:28</tt> by nedtool.
 * <pre>
 * packet BeaconRSU extends BaseFrame1609_4
 * {
 *     //id of the originator
 *     int RSUId = 0;
 *     Coord position[100];
 *     double beaconrate[100];
 *     string myDemoData;
 *     Coord slotpos;
 *     simtime_t timestamp = 0;
 * }
 * </pre>
 */
class VEINS_API BeaconRSU : public ::veins::BaseFrame1609_4
{
  protected:
    int RSUId;
    Coord position[100];
    double beaconrate[100];
    ::omnetpp::opp_string myDemoData;
    Coord slotpos;
    ::omnetpp::simtime_t timestamp;

  private:
    void copy(const BeaconRSU& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BeaconRSU&);

  public:
    BeaconRSU(const char *name=nullptr, short kind=0);
    BeaconRSU(const BeaconRSU& other);
    virtual ~BeaconRSU();
    BeaconRSU& operator=(const BeaconRSU& other);
    virtual BeaconRSU *dup() const override {return new BeaconRSU(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getRSUId() const;
    virtual void setRSUId(int RSUId);
    virtual unsigned int getPositionArraySize() const;
    virtual Coord& getPosition(unsigned int k);
    virtual const Coord& getPosition(unsigned int k) const {return const_cast<BeaconRSU*>(this)->getPosition(k);}
    virtual void setPosition(unsigned int k, const Coord& position);
    virtual unsigned int getBeaconrateArraySize() const;
    virtual double getBeaconrate(unsigned int k) const;
    virtual void setBeaconrate(unsigned int k, double beaconrate);
    virtual const char * getMyDemoData() const;
    virtual void setMyDemoData(const char * myDemoData);
    virtual Coord& getSlotpos();
    virtual const Coord& getSlotpos() const {return const_cast<BeaconRSU*>(this)->getSlotpos();}
    virtual void setSlotpos(const Coord& slotpos);
    virtual ::omnetpp::simtime_t getTimestamp() const;
    virtual void setTimestamp(::omnetpp::simtime_t timestamp);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const BeaconRSU& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, BeaconRSU& obj) {obj.parsimUnpack(b);}

} // namespace veins

#endif // ifndef __VEINS_BEACONRSU_M_H

